---
# Apply this to test group only
- hosts: test_group_2
  remote_user: pi
  become: yes
  #any_errors_fatal: true # stop if anything is wrong
  tasks:
  - name: base | init | assert ansible version
    assert:
     that:
      - "{{ ansible_version.string | version_compare('2.4', '>=') }}"
     msg: Ansible 2.4 or above is required
    
  # Security first
  - import_tasks: setup_tasks/configure_keys_and_disable_password.yaml
    static: yes
    
  # - name: test
    # command: /bin/true
    # notify: Restart ssh
    
  - meta: flush_handlers
  
#######################################################
# System configuration
  
  # Obtain board serial number and read in respective config section
  - import_tasks: common_tasks/get_serial.yaml
    static: yes  
  - set_fact:
     user_home: "/home/pi"
     rpi_serial: "{{ rpi_serial_output.stdout }}"
     rpi_configfile: "{{ lookup('ini', 'configfile section=' + rpi_serial_output.stdout + ' file=boards.ini')|quote }}"
  - debug: msg="Machine |{{ inventory_hostname }}| has actual hostname |{{ ansible_hostname }}|"
  - debug: msg="Board serial is {{ rpi_serial }}"
  - debug: msg="Configuration file is {{ rpi_configfile }}"
     
  # - name: base| init | user_home
    # register: user_home
    # action: command eval echo "~{{ userid }}"
  
  # Change hostname 
  # Dynamically include the task such that hostname is a parameter
  - name: base | init | include hostname playbook
    include_tasks: common_tasks/set_hostname.yaml
    static: no
    vars:
     desired_hostname: "{{ inventory_hostname }}"
    when: ansible_hostname != inventory_hostname
    notify: Full restart
  
  # Copy boot configuration
  - name: base | init | boot config copy
    copy: 
     src: ./config_files/config.txt
     dest: /boot/config.txt
     mode: 0755
    notify: Full restart
    
  # Copy pin device tree config
  - name: base | init | boot dtblob
    copy: 
     src: ./config_files/dt-blob.dts
     dest: "{{ user_home }}/dt-blob.dts"
     mode: 0755
    notify: Full restart    
    
  # Compile and install dtblob
  - name: base | init | compile dtblob
    shell: dtc -W no-unit_address_vs_reg -I dts -O dtb -o /boot/dt-blob.bin "{{ user_home }}/dt-blob.dts"
    
  # Disable BT service
  - name: base | init | bt service off
    systemd:
     name: hciuart.service
     state: stopped
     enabled: no
     daemon_reload: yes
     
  # Disable serial console
  - name: base | init | disable serial
    shell: raspi-config nonint do_serial 1
    
  # Boot into CLI
  - name: base | init | set cli boot
    shell: raspi-config nonint do_boot_behaviour B1
  
  - meta: flush_handlers
    
  # Configure wifi
  - import_tasks: setup_tasks/set_wlan_config.yaml
    static: yes
     
  # Configure apt
  - import_tasks: setup_tasks/set_apt_repos_and_config.yaml
    static: yes
    
  - meta: flush_handlers
  
  # Restart
  # - import_tasks: common_tasks/restart_and_await.yaml
    # static: yes
    
  # Configure throttling
  # - import_tasks: setup_tasks/set_wlan_traffic_shaping.yaml
    # static: yes
    
  - name: test
    command: /bin/true
    notify: Full restart
    
  - meta: flush_handlers

##################################################################
# PACKAGE MANAGEMENT

  # Restart
  # - import_tasks: common_tasks/restart_and_await.yaml
    # static: yes
    
  # Bring wifi up
  - import_tasks: common_tasks/wifi_up_and_await_network.yaml
    static: yes
  
  # Update repos
  - name: base | init | update sources/cache
    apt:
     update_cache: yes
     cache_valid_time: 360

  # Remove stupid extras
  - name: base | init | raspbian purge
    apt:
     pkg: "{{ item }}"
     state: absent
     purge: yes
     autoremove: yes
    with_items:
       - wolfram-engine
       - scratch
       - minecraft-pi
       - libreoffice*
       - dillo
       - scratch2
    register: purge_result
    retries: 3
    until: purge_result | succeeded
       
  # Update APT packages
  - import_tasks: common_tasks/update_apt_packages.yaml
    static: yes
    
  # Another restart
  - import_tasks: common_tasks/restart_and_await.yaml
    static: yes
    
  # Do pip stuff now
  - import_tasks: common_tasks/install_pip_packages.yaml
    static: yes
    
  # Bring wifi down
  - import_tasks: common_tasks/wifi_down.yaml
    static: yes
    
  handlers:
    - import_tasks: handlers.yaml